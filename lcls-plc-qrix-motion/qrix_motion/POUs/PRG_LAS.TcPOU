<?xml version='1.0' encoding='UTF-8'?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="PRG_LAS" Id="{29e7a0d6-925c-4720-acff-704fc8fc2385}" SpecialFunc="None">
    <Declaration><![CDATA[
PROGRAM PRG_LAS
VAR
    fb_LAS_VIS : FB_MotionStage;
    fb_LAS_D_H : FB_MotionStage;
    fb_LAS_D_V : FB_MotionStage;
    bInit : BOOl := TRUE;

    //LAS_VIS BEAM OK/NOK
    {attribute 'pytmc' := '
      pv: QRIX:LAS:MMS:VIS:STATES:SET
      io: io
    '}
    eLAS_VIS_StateSet: ENUM_LAS_VIS_States;
    {attribute 'pytmc' := '
      pv: QRIX:LAS:MMS:VIS:STATES:GET
      io: i
    '}
    eLAS_VIS_StateGet: ENUM_LAS_VIS_States;
    {attribute 'pytmc' := 'pv: QRIX:LAS:MMS:VIS'}
    fbLAS_VIS_PositionState1D : FB_PositionState1D;
    astLAS_VIS_PositionState : ARRAY [1..GeneralConstants.MAX_STATES] of ST_PositionState;
    fbLAS_VIS_StateSetupHelper : FB_StateSetupHelper;
    fbLAS_VIS_HardwareFFOutput : FB_HardwareFFOutput;

    //EPS
    stLAS_VIS : DUT_EPS;
    fbLAS_VIS_EPS : FB_EPS;

    stLAS_D_H : DUT_EPS;
    fbLAS_D_H_EPS : FB_EPS;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF (bInit) THEN
    bInit := FALSE;
    Main.M36.bHardwareEnable := TRUE;
    Main.M36.bPowerSelf := TRUE;
    Main.M36.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
    Main.M36.nEnableMode := ENUM_StageEnableMode.DURING_MOTION;
    Main.M36.fVelocity := 0.1;

    Main.M37.bHardwareEnable := TRUE;
    Main.M37.bPowerSelf := TRUE;
    Main.M37.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
    Main.M37.nEnableMode := ENUM_StageEnableMode.DURING_MOTION;
    Main.M37.fVelocity := 0.1;

    Main.M38.bHardwareEnable := TRUE;
    Main.M38.bPowerSelf := TRUE;
    Main.M38.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
    Main.M38.nEnableMode := ENUM_StageEnableMode.DURING_MOTION;
    Main.M38.fVelocity := 0.1;

    // Initialize the M36 LAS VIS Axis States
    // Beam OK if one of these two states is active. Otherwise, beam is not okay.
    fbLAS_VIS_StateSetupHelper(stPositionState := astLAS_VIS_PositionState[1], sName := 'Position7to24mm', bValid := TRUE, fPosition := 15.5, fDelta := 8.5);
    fbLAS_VIS_StateSetupHelper(stPositionState := astLAS_VIS_PositionState[2], sName := 'Position62to77mm', bValid := TRUE, fPosition := 69.5, fDelta := 7.5);

END_IF
//EPS
(*
fbLAS_D_H_EPS.setDescription('Less10mm;SampleZ;PHI'); // SET DESCRITION FOR BYTE INDICATOR LABELS
//Zero is fully retracted
fbLAS_D_H_EPS.setBit(nBits:= 0, bValue:=fb_LAS_D_H.stMotionStage.fPosition<=10);
fbLAS_D_H_EPS.setBit(nBits:= 1, bValue:=fb_LAS_D_H.stMotionStage.fPosition<=10 OR PRG_Diffractometer.fb_Diff_Z.stMotionStage.fPosition<=-20);
fbLAS_D_H_EPS.setBit(nBits:= 2, bValue:=fb_LAS_D_H.stMotionStage.fPosition<=10 OR PRG_Diffractometer.fb_Diff_Phi.stMotionStage.fPosition>0);
fbLAS_D_H_EPS(eps:=stLAS_D_H);
fb_LAS_D_H.stMotionStage.stEPSForwardEnable := stLAS_D_H; // Update Motion stage structure.

fbLAS_VIS_EPS.setDescription('IN90mm;PHIat90;Theta<10'); // SET DESCRITION FOR BYTE INDICATOR LABELS
//Zero is fully retracted
fbLAS_VIS_EPS.setBit(nBits:= 0, bValue:=fb_LAS_VIS.stMotionStage.fPosition<=5);
fbLAS_VIS_EPS.setBit(nBits:= 1, bValue:=fb_LAS_VIS.stMotionStage.fPosition<=5 OR PRG_Diffractometer.fb_Diff_Phi.stMotionStage.fPosition<>90);
fbLAS_VIS_EPS.setBit(nBits:= 2, bValue:=fb_LAS_VIS.stMotionStage.fPosition<=5 OR PRG_Diffractometer.fb_Diff_Theta.stMotionStage.fPosition>10);
fbLAS_VIS_EPS(eps:=fbLAS_VIS_EPS);
//fb_LAS_VIS.stMotionStage.stEPSForwardEnable := fbLAS_VIS_EPS;
*)

fbLAS_VIS_PositionState1D(
    stMotionStage := Main.M36,
    astPositionState := astLAS_VIS_PositionState,
    eEnumSet := eLAS_VIS_StateSet,
    eEnumGet := eLAS_VIS_StateGet,
    bEnable := TRUE
);

IF eLAS_VIS_StateGet = ENUM_LAS_VIS_States.Position7to24mm OR eLAS_VIS_StateGet = ENUM_LAS_VIS_States.Position62to77mm THEN
    // BEAM OKAY

ELSE
    // BEAM NOT OKAY
END_IF

fb_LAS_VIS(stMotionStage:=Main.M36);
fb_LAS_D_H(stMotionStage:=Main.M37);
fb_LAS_D_V(stMotionStage:=Main.M38);
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>